# Appointment Booking API Documentation

## Overview

This API allows users to sign up, sign in, book appointments, and view their appointment history. It is built with Node.js, Express.js, and Sequelize (using SQLite).

## Base URL

http://localhost:3001/api

## Endpoints

### User Authentication

#### Sign Up

- **URL**: /signup
- **Method**: POST
- **Headers**: Content-Type: application/json
- **Body**:
  {
    "username": "yourUsername",
    "password": "yourPassword"
  }
- **Success Response**:
  - **Code**: 201 Created
  - **Content**:
    {
      "message": "User created successfully"
    }
- **Error Responses**:
  - **Code**: 400 Bad Request
  - **Content**:
    {
      "error": "Username already exists"
    }
  - **Code**: 500 Internal Server Error
  - **Content**:
    {
      "error": "Something went wrong"
    }

#### Sign In

- **URL**: /signin
- **Method**: POST
- **Headers**: Content-Type: application/json
- **Body**:
  {
    "username": "yourUsername",
    "password": "yourPassword"
  }
- **Success Response**:
  - **Code**: 200 OK
  - **Content**:
    {
      "token": "yourJWTtoken"
    }
- **Error Responses**:
  - **Code**: 400 Bad Request
  - **Content**:
    {
      "error": "Invalid username or password"
    }
  - **Code**: 500 Internal Server Error
  - **Content**:
    {
      "error": "Something went wrong"
    }

### Appointments

#### Create Appointment

- **URL**: /appointments
- **Method**: POST
- **Headers**: 
  - Content-Type: application/json
  - Authorization: Bearer yourJWTtoken
- **Body**:
  {
    "date": "YYYY-MM-DD",
    "time": "HH:MM:SS"
  }
- **Success Response**:
  - **Code**: 201 Created
  - **Content**:
    {
      "id": 1,
      "date": "YYYY-MM-DD",
      "time": "HH:MM:SS",
      "UserId": 1,
      "updatedAt": "YYYY-MM-DDTHH:MM:SS.000Z",
      "createdAt": "YYYY-MM-DDTHH:MM:SS.000Z"
    }
- **Error Responses**:
  - **Code**: 401 Unauthorized
  - **Content**:
    {
      "error": "Access denied"
    }
  - **Code**: 500 Internal Server Error
  - **Content**:
    {
      "error": "Something went wrong"
    }

#### Get All Appointments for Authenticated User

- **URL**: /appointments
- **Method**: GET
- **Headers**: 
  - Authorization: Bearer yourJWTtoken
- **Success Response**:
  - **Code**: 200 OK
  - **Content**:
    [
      {
        "id": 1,
        "date": "YYYY-MM-DD",
        "time": "HH:MM:SS",
        "UserId": 1,
        "updatedAt": "YYYY-MM-DDTHH:MM:SS.000Z",
        "createdAt": "YYYY-MM-DDTHH:MM:SS.000Z"
      },
      {
        "id": 2,
        "date": "YYYY-MM-DD",
        "time": "HH:MM:SS",
        "UserId": 1,
        "updatedAt": "YYYY-MM-DDTHH:MM:SS.000Z",
        "createdAt": "YYYY-MM-DDTHH:MM:SS.000Z"
      }
    ]
- **Error Responses**:
  - **Code**: 401 Unauthorized
  - **Content**:
    {
      "error": "Access denied"
    }
  - **Code**: 500 Internal Server Error
  - **Content**:
    {
      "error": "Something went wrong"
    }

## Using Postman to Test the API

### Sign Up
1. Open Postman.
2. Select POST method.
3. Enter the URL http://localhost:3001/api/signup.
4. Go to the Body tab, select raw and choose JSON as the format.
5. Enter the following JSON in the body:
   {
     "username": "yourUsername",
     "password": "yourPassword"
   }
6. Click Send.

### Sign In
1. Open Postman.
2. Select POST method.
3. Enter the URL http://localhost:3001/api/signin.
4. Go to the Body tab, select raw and choose JSON as the format.
5. Enter the following JSON in the body:
   {
     "username": "yourUsername",
     "password": "yourPassword"
   }
6. Click Send.
7. Copy the token from the response.

### Create Appointment
1. Open Postman.
2. Select POST method.
3. Enter the URL http://localhost:3001/api/appointments.
4. Go to the Headers tab and add a new key Authorization with the value Bearer yourJWTtoken.
5. Go to the Body tab, select raw and choose JSON as the format.
6. Enter the following JSON in the body:
   {
     "date": "YYYY-MM-DD",
     "time": "HH:MM:SS"
   }
7. Click Send.

### Get All Appointments
1. Open Postman.
2. Select GET method.
3. Enter the URL http://localhost:3001/api/appointments.
4. Go to the Headers tab and add a new key Authorization with the value Bearer yourJWTtoken.
5. Click Send.
